# Server Configuration
server.port=${PORT:8080}

# PostgreSQL Configuration for Render
# These properties will use the environment variables from Render
# Render injects proper PostgreSQL authentication details via DATABASE_URL variable
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging Configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.meetuptravel=DEBUG
logging.level.org.springframework.security=DEBUG

# JWT Configuration
# Using a longer key (more than 64 chars) for HS512 algorithm
jwt.secret=meetuptravelsecretkey2024helloeverybodyhowareyoudoingtodayineedalongsecretkeyforHS512signatures
jwt.expiration=86400000

# Actuator Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.db.enabled=true 